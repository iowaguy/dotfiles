#!/usr/bin/env nix-shell
#! nix-shell -i bash -p dmidecode python3

set -eu -o pipefail
shopt -s failglob

HOME_MANAGER_VERSION=21.05
NIX_CONFIG_BASE_DIR=${HOME}/workspace/dotfiles
PYTHON=$(which python3)
declare -A machines
machines['MacBookPro11,5']=boston.nix
machines['20A8S1BJ00']=kansas.nix

system_config() {
  # Nix configuration
  sudo cp ${NIX_CONFIG_BASE_DIR}/system/configuration.nix /etc/nixos/
  sudo cp -r ${NIX_CONFIG_BASE_DIR}/system/machine/ /etc/nixos/
  sudo cp -r ${NIX_CONFIG_BASE_DIR}/system/wm/ /etc/nixos/
  sudo cp -r ${NIX_CONFIG_BASE_DIR}/nix/ /etc/nixos/

  model="$(sudo dmidecode -s system-product-name)"

  sudo cp -r ${NIX_CONFIG_BASE_DIR}/system/machine/ /etc/nixos/
  if [ ! -f /etc/nixos/machine/current.nix ]; then
    echo "Linking current machine's configuration (${model})"
    sudo ln -s "/etc/nixos/machine/${machines[${model}]}" /etc/nixos/machine/current.nix
  fi
}

system_install() {
  system_config
  sudo nixos-rebuild switch --upgrade
}

system_refresh() {
  system_config
  sudo nixos-rebuild switch
}

hm_install() {
  # Home manager
  mkdir -p $HOME/.config/nixpkgs/
  cp -r home/* $HOME/.config/nixpkgs/
  nix-channel --add https://github.com/nix-community/home-manager/archive/release-${HOME_MANAGER_VERSION}.tar.gz home-manager
  nix-channel --update
  export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
  nix-shell '<home-manager>' -A install

  hm_refresh
}

hm_refresh() {
  if [ ! -f $HOME/.config/nixpkgs/home.nix ]; then
    echo "Linking home.nix..."
    ln -s $HOME/workspace/dotfiles/home/home.nix $HOME/.config/nixpkgs/home.nix
  fi
  home-manager switch
}

install() {
  system_install
  hm_install

  # Set screenlock wallpaper
  betterlockscreen -u home/resources/background_image
  exit $?
}

refresh() {
  system_refresh
  if [ $? == 0 ]; then
    hm_refresh
  fi
  exit $?
}

update() {
  pushd ${NIX_CONFIG_BASE_DIR}
  $PYTHON ${NIX_CONFIG_BASE_DIR}/nix/update.py
  popd
  if [ $? == 0 ]; then
    refresh
  fi
  exit $?
}

usage() {
  echo "Usage: $0 [install|refresh|update]" 1>&2
  exit 1
}

while :; do
  PARAM=`echo $1 | awk -F= '{print $1}'`
  VALUE=`echo $1 | awk -F= '{print $2}'`
  case "$PARAM" in
    install)
      install
      ;;
    refresh)
      refresh
      ;;
    update)
      update
      ;;
    *)
      echo "ERROR: unknown parameter \"$PARAM\""
      usage
      ;;
  esac
  shift
done
shift $((OPTIND-1))
